<?php

use MyArray\Cate7\Example\Example31;

include_once($_SERVER['DOCUMENT_ROOT'] . '/sandbox/init.php');

echo '<div>
Пузырьковая сортировка — это неэффективный алгоритм сортировки,<br>
который прост для понимания и поэтому часто преподается на вводных курсах информатики в качестве примера того, как не следует сортировать список.<br>
Тем не менее, это правильно в том смысле, что в конечном итоге, когда выполняется до конца, создается отсортированная версия исходного списка.<br>
В основе Bubblesort лежит то, что известно как пропуск. Давайте рассмотрим пример того, как работает пропуск.<br>
Рассмотрим следующий список:<br>
9, 7, 5, 3, 1, 2, 4, 6, 8<br>
Мы инициируем проход, сравнивая первые два элемента списка. Первый элемент больше второго? Если это так, мы меняем местами два элемента.<br>
Поскольку в данном случае 9 больше 7, мы меняем их местами, чтобы получить 7, 9. Тогда список становится таким:<br>
7, 9, 5, 3, 1, 2, 4, 6, 8<br>
Затем мы продолжаем процесс для 2-го и 3-го элементов, 3-го и 4-го элементов... вплоть до последних двух элементов.<br>
Когда проход завершен, наш список становится таким:<br>
7, 5, 3, 1, 2, 4, 6, 8, 9<br>
Обратите внимание, что самое большое значение 9 «поднялось» до конца списка. Именно так Bubblesort получил свое название.<br>
Задача<br>
Учитывая массив целых чисел, ваша функция bubblesortOnce/bubblesort_once/BubblesortOnce (или эквивалентная, в зависимости от соглашений об именах вашего языка)<br>
должна возвращать новый массив, эквивалентный выполнению ровно 1 полного прохода исходного массива.<br>
Ваша функция должна быть чистой, то есть она не должна изменять входной массив.
<br>
<a href="https://www.codewars.com/kata/56b97b776ffcea598a0006f2">Задача</a>
</div>';
echo '<br>';
$start = microtime(true);// засекли время на выполнене скрипта
echo '<b>Начало.</b><br>';
$a = [9, 7, 5, 3, 1, 2, 4, 6, 8];
myDamp($a);
echo '<b>ответ: </b><br>';
myDamp(Example31::bubblesortOnce($a));
echo '<br><b>Конец.</b><br>';
echo 'Время выполнения скрипта: ' . round(microtime(true) - $start, 4) . ' сек.';

